version: 2.1
orbs:
  aws-s3: circleci/aws-s3@4.0.0

defaults: &defaults
  working_directory: /tmp/mui-toolpad
  resource_class: medium
  docker:
    - image: cimg/node:16.17
# CircleCI has disabled the cache across forks for security reasons.
# Following their official statement, it was a quick solution, they
# are working on providing this feature back with appropriate security measures.
# https://discuss.circleci.com/t/saving-cache-stopped-working-warning-skipping-this-step-disabled-in-configuration/24423/21
#
# restore_repo: &restore_repo
#   restore_cache:
#     key: v1-repo-{{ .Branch }}-{{ .Revision }}

commands:
  install_js:
    parameters:
      browsers:
        type: boolean
        default: false
        description: 'Set to true if you intend to use any browser (e.g. with playwright).'

    steps:
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - when:
          condition: << parameters.browsers >>
          steps:
            - run:
                name: Install pnpm package manager
                command: |
                  corepack enable
                  corepack prepare pnpm@latest-8 --activate
            - run:
                name: Prepare playwright hash
                command: pnpm list --json --filter playwright > /tmp/playwright_info.json
            - store_artifacts:
                name: Debug playwright hash
                path: /tmp/playwright_info.json
            - restore_cache:
                name: Restore playwright cache
                keys:
                  - v5-playwright-{{ arch }}-{{ checksum "/tmp/playwright_info.json" }}
      - run:
          name: View install environment
          command: |
            node --version
            pnpm --version
      - run:
          name: Install js dependencies
          command: pnpm install
          environment:
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: <<# parameters.browsers >>0<</ parameters.browsers >><<^ parameters.browsers >>1<</ parameters.browsers >>

      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules
      - when:
          condition: << parameters.browsers >>
          steps:
            - save_cache:
                name: Save playwright cache
                key: v5-playwright-{{ arch }}-{{ checksum "/tmp/playwright_info.json" }}
                paths:
                  # Keep path in sync with "PLAYWRIGHT_BROWSERS_PATH"
                  # Can't use environment variables for `save_cache` paths (tested in https://app.circleci.com/pipelines/github/mui/material-ui/37813/workflows/5b1e207f-ac8b-44e7-9ba4-d0f9a01f5c55/jobs/223370)
                  - /tmp/pw-browsers

jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - install_js
      - run:
          name: Should not have any git not staged
          command: git add -A && git diff --exit-code --staged
      - run:
          name: Check for duplicated packages
          command: pnpm dedupe --check

  test_lint:
    <<: *defaults
    steps:
      - checkout
      - install_js
      - run:
          name: Eslint
          command: pnpm eslint
      - run:
          name: Lint JSON
          command: pnpm jsonlint
      - run:
          name: Lint Markdown
          command: pnpm markdownlint
  test_types:
    <<: *defaults
    steps:
      - checkout
      - install_js
      - run:
          name: Check Typescript types
          command: pnpm check-types
  test_static:
    <<: *defaults
    steps:
      - checkout
      - install_js
      - run:
          name: '`pnpm prettier` changes committed?'
          command: pnpm prettier --check
      - run:
          name: '`pnpm jsonSchemas` changes committed?'
          command: |
            pnpm jsonSchemas
            git add -A && git diff --exit-code --staged
      - run:
          name: '`pnpm docs:build:api` changes committed?'
          command: |
            pnpm docs:build:api
            git add -A && git diff --exit-code --staged

  test_unit:
    <<: *defaults
    resource_class: 'large'
    docker:
      - image: mcr.microsoft.com/playwright:v1.37.1-focal
        environment:
          NODE_ENV: test
          TOOLPAD_TEST_RETRIES: 1

    steps:
      - checkout
      - install_js:
          browsers: true
      - run:
          name: 'Build packages'
          command: pnpm release:build
      - save_cache:
          name: Save Next.js cache
          key: v0-next-{{ checksum "yarn.lock" }}
          paths:
            - packages/toolpad-app/.next/cache
      - run:
          name: Tests fake browser
          command: pnpm test
      - run:
          name: Tests real browser
          command: pnpm test:integration
      - run:
          name: Upload screenshots to Argos CI
          command: pnpm test:argos
      - store_artifacts:
          path: test-results
          destination: playwright-test-results

workflows:
  pipeline:
    jobs:
      - checkout
      - test_lint:
          requires:
            - checkout
      - test_types:
          requires:
            - checkout
      - test_static:
          requires:
            - checkout
      - test_unit:
          requires:
            - checkout
